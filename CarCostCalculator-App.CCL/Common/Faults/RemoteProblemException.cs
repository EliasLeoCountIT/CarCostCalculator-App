using static CarCostCalculator_App.CCL.Common.Faults.RemoteProblemException;

namespace CarCostCalculator_App.CCL.Common.Faults
{
    /// <summary>
    /// Represents an exception that is thrown when a remote problem occurs.
    /// </summary>
    /// <param name="details"></param>
    public class RemoteProblemException(ProblemDetails details) : Exception(details.ToString())
    {
        #region Public Properties

        /// <summary>
        /// A machine-readable format for specifying errors in HTTP API responses based on <see href="https://tools.ietf.org/html/rfc7807"/>.
        /// </summary>
        public ProblemDetails Details { get; } = details;

        #endregion

        /// <summary>
        /// A machine-readable format for specifying errors in HTTP API responses based on <see href="https://tools.ietf.org/html/rfc7807"/>.
        /// </summary>
        /// <param name="Title">A short, human-readable summary of the problem type.</param>
        /// <param name="Detail">A human-readable explanation specific to this occurrence of the problem.</param>
        /// <param name="Status">The HTTP status code generated by the origin server for this occurrence of the problem.</param>
        /// <param name="Instance">A URI reference that identifies the specific occurrence of the problem.</param>
        /// <param name="RequestId">A unique identifier to represent this request in trace logs.</param>
        /// <param name="TraceId">The trace identifier associated with the current request.</param>
        /// <param name="Errors">The errors that occurred during validation.</param>
        public record ProblemDetails(string? Title, string? Detail, int? Status, string? Instance, string? RequestId, string? TraceId, IDictionary<string, string[]>? Errors = null);
    }
}
